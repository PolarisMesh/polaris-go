name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write

# Always force the use of Go modules
env:
  GO111MODULE: on

jobs:

  golangci:
    strategy:
      matrix:
        go-version: [1.15.x,1.16.x,1.17.x,1.18.x]
    name: golangci-lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3.1.0
        with:
          # Required: the version of golangci-lint is required and must be specified without patch version: we always use the latest patch version.
          version: latest
  Reviveci:
    strategy:
      matrix:
        go-version: [1.15.x,1.16.x,1.17.x,1.18.x]
    name: Run Revive Action
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
      - uses: actions/checkout@v3
      - name: Run Revive Action
        uses: morphy2k/revive-action@v2
        with:
          # Path to your Revive config within the repo (optional)
          config: revive.toml

  build:
    runs-on: ubuntu-latest
    # strategy set
    strategy:
      matrix:
        go: ["1.15", "1.16", "1.17", "1.18"]
    steps:
      # Setup the environment.
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}
      # Checkout latest code
      - name: Checkout repo
        uses: actions/checkout@v3

      # Execute vert check
      - name: vert check
        run: bash vert.sh -install && bash vert.sh

      # Run tests
      - name: run tests
        run: |
          cd ./test
          go test -timeout=240m -v -coverprofile=coverage.txt -coverpkg=github.com/polarismesh/polaris-go/api,github.com/polarismesh/polaris-go/pkg,github.com/polarismesh/polaris-go/plugin

      - name: Coverage
        run: bash <(curl -s https://codecov.io/bash)